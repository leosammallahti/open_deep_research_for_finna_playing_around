[project]
name = "open_deep_research"
version = "0.0.15"
description = "Planning, research, and report generation."
authors = [
    { name = "Lance Martin" }
]
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.10"
dependencies = [
    # Pin core LangChain & LangGraph libraries to a safe minor series to
    # prevent silent API breakage (e.g. callback signature changes).
    "langgraph~=0.2.55",              # any 0.2.x >=.55 <0.3.0
    "langchain-community~=0.3.9",    # any 0.3.x >=.9 <0.4.0
    "langchain-openai~=0.3.7",       # any 0.3.x
    "langchain-anthropic~=0.3.15",   # any 0.3.x
    "langchain-mcp-adapters~=0.1.6", # any 0.1.x
    "langchain-deepseek~=0.1.2",     # any 0.1.x
    "langchain-tavily",
    "langchain-groq>=0.2.4",
    "openai>=1.61.0",
    "tavily-python>=0.5.0",
    "arxiv>=2.1.3",
    "pymupdf>=1.25.3",
    "xmltodict>=0.14.2",
    "linkup-sdk>=0.2.3",
    "duckduckgo-search>=3.0.0",
    "exa-py>=1.8.8",
    "requests>=2.32.3",
    "beautifulsoup4==4.13.3",
    "python-dotenv>=1.0.1",
    "pytest",
    "httpx>=0.24.0",
    "markdownify>=0.11.6",
    "azure-identity>=1.21.0",
    "azure-search>=1.0.0b2",
    "azure-search-documents>=11.5.2",
    "rich>=13.0.0",
    "langgraph-cli[inmem]>=0.3.1",
    "langsmith>=0.3.37",
    "structlog>=24.1.0",
    "pydantic-settings>=2.2.1",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.11.1",
    "ruff>=0.6.1",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.23.6",
    "hypothesis>=6.100.0",
    "types-requests",
]

[build-system]
requires = ["setuptools>=73.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["open_deep_research", "tests"]

[tool.setuptools.package-dir]
"open_deep_research" = "src/open_deep_research"
"tests" = "tests"

[tool.setuptools.package-data]
"*" = ["py.typed"]

[tool.ruff]
lint.select = [
    "E",    # pycodestyle
    "F",    # pyflakes
    "I",    # isort
]
lint.ignore = [
    "E501",  # line length
    "E402",  # allow module-level imports below docstring
    "F402",  # allow variable shadowing for imports
    "F841",  # allow unused variables in some tests/examples
    "E731",  # allow assignment of lambda expressions
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "UP"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
follow_imports = "silent"
check_untyped_defs = false
warn_unused_ignores = false
disable_error_code = ["assignment", "var-annotated", "operator", "arg-type", "list-item", "type-arg"]
exclude = "tests|examples"
